<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="$(find space_challenger_simulation)/worlds/tram.world"/-->    
 </include>

  <arg name="model" default="$(find space_challenger_simulation)/models/simple_tracked/model.urdf"/>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find space_challenger_simulation)/models/tram/model.urdf -urdf -z 0 -model tram" />
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!--param name="robot_description" command="cat $(find space_challenger_simulation)/models/simple_tracked/model.urdf"/--> 

   <!-- Load joint controller configurations from YAML file to parameter server -->
  <!--rosparam file="$(find space_challenger_simulation)/config/control.yaml" command="load"/-->

  <!-- load the controllers -->
  <!--node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/simple_tracked" args="joint1_position_controller joint2_position_controller joint_state_controller"/-->
  <!-- convert joint states to TF transforms for rviz, etc -->
  <arg name="gui" default="true" />

  <node if="$(arg gui)" name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />
  <node unless="$(arg gui)" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
 
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/simple_tracked/joint_states" />  
  </node-->
  <node name="rviz" pkg="rviz" type="rviz" required="true" />


</launch>
